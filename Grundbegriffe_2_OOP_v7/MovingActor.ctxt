#BlueJ class context
comment0.target=MovingActor
comment0.text=\n\ Ac\n\ \n
comment1.params=
comment1.target=MovingActor()
comment1.text=\n\ Erzeuge\ einen\ Hasen\n
comment10.params=distance
comment10.target=int\ getNextY(int)
comment10.text=\n\ Returns\ the\ y\ coordinate\ of\ the\ next\ field,\ \n\ that\ lays\ <b>distance</b>\ steps\ in\ the\ current\ direction.\n
comment11.params=
comment11.target=void\ act()
comment11.text=\n\ Tu,\ was\ ein\ Hase\ so\ tut\n
comment2.params=
comment2.target=void\ moveUp()
comment2.text=\n\ Der\ Hase\ bewegt\ sich\ nach\ oben\!\n\ \n
comment3.params=
comment3.target=void\ moveLeft()
comment3.text=\n\ Der\ Hase\ bewegt\ sich\ nach\ Links.\n
comment4.params=
comment4.target=void\ moveRight()
comment4.text=\n\ Der\ Hase\ bewegt\ sich\ nach\ rechts\!\n
comment5.params=
comment5.target=void\ moveDown()
comment5.text=\n\ Der\ Hase\ bewegt\ sich\ nach\ unten.\n
comment6.params=
comment6.target=void\ move()
comment7.params=
comment7.target=boolean\ canMove()
comment7.text=\n\ \u00DCberpr\u00FCft\ ob\ der\ Hase\ einen\ Schritt\ nach\ vorne\ laufen\ kann\ ohne\ auf\ ein\ Hindernis\ (Wand/Stein)\ zu\ treffen.\n
comment8.params=distance
comment8.target=boolean\ canMove(int)
comment8.text=\n\ \u00DCberpr\u00FCft,\ ob\ sich\ in\ distance\ Schritten\ vor\ dem\ Hasen\ kein\ Hindernis\ (Wand/Stein)\ befindet.\ \n
comment9.params=distance
comment9.target=int\ getNextX(int)
comment9.text=\n\ Returns\ the\ x\ coordinate\ of\ the\ next\ field,\ \n\ that\ lays\ <b>distance</b>\ steps\ in\ the\ current\ direction.\n
numComments=12
